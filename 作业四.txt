//1.	显示当前准确的中文时间，包括北京、东京、纽约、伦敦，格式为
//（2016年9月28日星期三 上午10:25）
//a)	显示中文需要设置locale
 /// - Parameters:
///   - date: 日期与时间
///   - zone: 时区(东区为正数，西区为负数)
/// - Returns: 返回指定格式的字符串
/*func getDate(date: Date, zone: Int = 0) -> String {
    let formatter = DateFormatter()  //实例化格式化类
    formatter.dateFormat = "yyyy年MM月dd日EEEE aa KK:mm"  //指定格式化的格式
    formatter.locale = Locale.current  //设置当前位置，可以将对应的星期数和12小时制的上下午设置为中文
    if zone >= 0 { //当传入的为正数时，在东半区
        formatter.timeZone = TimeZone(abbreviation: "UTC+\(zone):00")
    } else {  //当传入的为负数时，在西半区
        formatter.timeZone = TimeZone(abbreviation: "UTC\(zone):00")
    }
    let dateString = formatter.string(from: now)  //将传入的日期格式化为字符串
    return dateString
}

let now = Date()  //获取当前时间日期
let beijing = getDate(date: now, zone: +8)  //获取当前北京的时间
print("北京: \(beijing)")  //输出: 北京: 2017年09月19日星期二 下午 10:56

let tokyo = getDate(date: now, zone: 9)  //获取当前东京的时间
print("东京: \(tokyo)")  //输出: 东京: 2017年09月19日星期二 下午 11:56

let newYork = getDate(date: now, zone: -5)  //获取当前纽约的时间
print("纽约: \(newYork)")  //输出: 纽约: 2017年09月19日星期二 上午 09:56

let london = getDate(date: now)  ////获取当前伦敦的时间
print("伦敦: \(london)")  //输出: 伦敦: 2017年09月19日星期二 下午 02:56
*/

//2
var str = "Swift is a powerful and intuitive programming language for iOS, OS X, tvOS, and watchOS."

let index1 = str.index(str.startIndex, offsetBy: 6)
let index2 = str.index(str.startIndex, offsetBy: 20)
let str1 = str[index1...index2]
print(str1)
let str2 = str.replacingOccurrences(of: "OS", with: "")
print(str2)

 
//3
var dic = [ "beijing": beijing, "tokyo": tokyo, "newYork": newYork, "london": london, "str1":str1,"str2":str2] as AnyObject
//将字典转换为任意类型，方便后面写入文件
let fileManager = FileManager.default
var url = fileManager.urls(for: .documentDirectory, in:.userDomainMask).first!
url.appendPathComponent("test.txt")
try? dic.write(to: url, atomically: true)

//4
let imageURL = URL(string: "https://ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superman/img/logo/bd_logo1_31bdc765.png") 
let date = try Data(contentsOf:imageURL!) 
let fileManager = FileManager.default
var url = fileManager.urls(for: .documentDirectory, in:.userDomainMask).first!
url.appendPathComponent("lllggg.jpg")
try date.write(to: url) 


//5
enum MyError:Error{
    case Zero
    case NotURL
}
guard let weatherUrl = URL(string: "http://www.weather.com.cn/data/cityinfo/101010100.html")
    else{
        throw MyError.NotURL
    }
let jsondate = try! Data(contentsOf: weatherUrl)
let json = try! JSONSerialization.jsonObject(with: jsondate, options: .allowFragments)
print(json)
//把json文件转化为字典
guard let dictionary = json as?[String:Any] else{
    throw MyError.NotURL
}
guard let weather = dictionary["weatherinfo"] as? [String:String] else{
    throw MyError.NotURL
}
print(weather)
let temp1 = weather["temp1"]
print(temp1!)